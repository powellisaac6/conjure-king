[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://51tcn1fpelnf"]

[sub_resource type="Shader" id="Shader_2abov"]
code = "shader_type canvas_item;

uniform bool whiten = false;

void fragment() {
	vec4 texture_color = texture(TEXTURE, UV);
	if(whiten){
		vec3 white = vec3(1, 1, 1);
		vec3 whitened_texture_rgb = mix(texture_color.rgb, white, 0.8);
		COLOR = vec4(whitened_texture_rgb, texture_color.a);
	} else {
		COLOR = texture_color;
	}
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[resource]
shader = SubResource("Shader_2abov")
shader_parameter/whiten = false
